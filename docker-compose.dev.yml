version: '3.6'

services:
  reverse_proxy:
    image: nginx:1.24.0-alpine
    container_name: proxy
    volumes:
      - ./dev_components/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80

  web:
    build:
      context: .
      dockerfile: ./webapp/Dockerfile
      target: development
    container_name: web
    environment:
      OPENAI_API_HOST: ${OPENAI_API_HOST}
      DEFAULT_MODEL: ${DEFAULT_MODEL}
      NEXT_PUBLIC_DEFAULT_SYSTEM_PROMPT: ${NEXT_PUBLIC_DEFAULT_SYSTEM_PROMPT}
      MONGODB_URI: ${MONGODB_URI}
      MONGODB_DB: ${MONGODB_DB}
    ports:
      - 3000:3000
    volumes:
      - ./webapp:/app
    
  openai-apiserver:
    build:
      context: .
      dockerfile: dev_components/openai_apiserver/Dockerfile
    container_name: apiserver
    ports:
      - 8080:80
    volumes:
      - ./dev_components/openai_apiserver:/code/app

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${MONGODB_URI}
